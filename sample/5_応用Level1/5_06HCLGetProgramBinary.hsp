//ソース→バイナリコードに変換し文字列を返します。

#include "HSPCL64.as"
	HCLinit
	
	prg=HCLCreateProgramWithSource({"
__kernel void test(__global int* a,__global int* b,__global int* c)
{
	int gid=get_global_id(0);
	c[gid]=a[gid]+b[gid];
}
	"})

	bin=HCLGetProgramBinary(prg)
	
	sr=" "
	poke sr,0,10
	strrep bin,sr,"\n"
	mes bin

	//bsave "bin.txt",bin
	stop


//補足
//HCLCreateProgramWithSourceはソース→cl_programを生成する命令ですが内部で
//
// clCreateProgramWithSource
// clBuildProgram
//
//のAPIを呼び出しています。
//一方バイナリも同じようにHCLCreateProgramWithBinary命令で
//
// clCreateProgramWithBinary
// clBuildProgram
//
//でバイナリ→cl_programを生成できます。
//SPIRをバイナリとして読み込ませることもできるようです。その際はbuild optionに"-x spir"を追加してください。
//https://www.isus.jp/wp-content/uploads/pdf/561_using-spir-for-fun-and-profit-with-intel-opencl-code-builder.pdf