//NVIDIAのGPUではブロッキングモードにオフを指定しても強制的にブロッキングになってしまう不具合があります。
//それをあらゆる手段を使って回避しているのがHCLReadBuffer_NonBlocking命令です。
//プラグインのc++側で別スレッドを立ち上げ、そのスレッドでHCLReadBufferを実行します。
//そうすることで見た目上は、ノンブロッキングで進んでいるように見えます。
#include "HSPCL64.as"
	HCLinit

	sz=1024*1024*128//128Mb、この大きさなら転送に少し時間がかかるはず
	mem=HCLCreateBuffer(sz)
	dim i,sz/4
	
	i.30000000=2345,25643256,437,3265,6456,56//適当な値
	
	HCLWriteBuffer mem,i,sz//gpuに転送ここではブロッキングモードon
	dim i,sz/4//また0に初期化

	HCLReadBuffer_NonBlocking mem,i,sz,0,0,0,0//第6引数に0を指定することでブロッキングモードオフで実行
	//第7引数にイベント登録の0を

	mes i.30000000//ここで0が表示されればまだ転送が終わっていない
	mes i.30000001
	mes i.30000002
	mes i.30000003
	mes i.30000004
	mes i.30000005
	mes "ここで0が表示されればまだデータ転送が終わっていない(ブロッキングモードoff成功)"
		repeat -1
			if (HCLGet_LastNonBlocking_Status()==0){//*1
				HCLWaitForEvent 0
				break
			}
			//余裕があるならここにwaitを入れてもいいかも
		loop
	
	pos 0,160
	mes i.30000000//ここで0が表示されればまだ転送が終わっていない
	mes i.30000001
	mes i.30000002
	mes i.30000003
	mes i.30000004
	mes i.30000005
	mes "ここで0以外が表示されればデータ転送終わっている"
	stop

//*1
//
//先程のHCLReadBuffer_NonBlocking命令が
//①実行開始前：イベントも登録されてない
//②実行開始直後：イベント登録はされている→HCLWaitForEventなどイベント関連命令が使える
//③実行終了：イベント登録されているしデータ転送が完了している
//
//HCLGet_LastNonBlocking_Status命令は上記の①か②かを判別できる命令です。
//つまりHCLReadBuffer_NonBlockingの後の行でも、(コンテキストスイッチのタイミング次第で)イベントが登録されてないと
//HCLGetEventStatus命令やHCLWaitForEvent命令でエラーが発生してしまいます。それを防ぐために作った命令です。
//使い方は本サンプルのようにして下さい。