//正則行列 A (1024*1024)の固有値と固有ベクトルを求めるサンプル
//べき乗法で

#include "HSPCL64a.as"
	HCLinit
	HCLSetDevice 1
	
	raw=1024
	col=1024
	//A
	matA=HCLCreateBuffer(raw*col*4)
	HCLBLAS_Set2DShape matA,raw,col
	HCLDoXf "A[i]=((float)RND(i)/2147483648.0f)-1.0f;",matA//-1.0〜1.0のランダム初期値がはいる
	
	//u
	vecU=HCLCreateBuffer(raw*4)
	HCLBLAS_Set2DShape vecU,1,col
	HCLDoXf "A[i]=((float)RND(i)/2147483648.0f)-1.0f;",vecU//-1.0〜1.0のランダム初期値がはいる
	//uu
	vecUU=HCLCreateBuffer(raw*4)
	HCLBLAS_Set2DShape vecUU,1,col

	//eigen_value
	eigen_value=HCLCreateBuffer(4)

	//uを正規化 L2ノルム計算
	l2n2=HCLBLAS_sgemv(vecU,vecU)//L2ノルムの2乗が求まる
	
	HCLDoXf "A[i]/=sqrt(B[0]);",VecU,l2n2
	//一応L2ノルムをチェック
	HCLBLAS_sgemv l2n2,vecU,vecU
	mes FloatToDouble(HCLReadIndex_i32(l2n2,0))//=1.000000


	//べき乗法のループ
		repeat 1000
		HCLBLAS_sgemv vecUU,matA,vecU//uu=Au
		//eigen_value=np.dot(u,uu)/(np.dot(u,u.T)) = np.dot(u,uu)/1
		HCLBLAS_sgemv eigen_value,vecU,vecUU//np.dot(u,uu)
		if cnt>976:mes FloatToDouble(HCLReadIndex_i32(eigen_value,0))
		
		HCLBLAS_sgemv l2n2,vecUU,vecUU
		HCLDoXf "A[i]=B[i]/sqrt(C[0]);",VecU,VecUU,l2n2//uuの正規化をuに代入
		loop
	