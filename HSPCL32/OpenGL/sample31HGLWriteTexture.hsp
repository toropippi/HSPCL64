#include "hspcl32.as"
	winx=256:winy=256
	screen 0,640,480
	HCLini

	//HSPでバッファを作る
	screen 1,winx,winy
	color 0,0,0
	mes "あかさたなはまやらわ"
	mes "これはmesで書いたHSP画面です"
	mes stat
	mes 1
	mes 2
	mes 3
	mes 4
	boxf 50,60,100,200
	mref i,66;gsel 1のHSPのウィンドウ内画像データ(VRAM)を使いたいので
	//ここまで

	//ここからはデータ変換
	sdim dataarray4,winx*winy*4;データを変換するために必要な配列変数
	sdim dataarray3,winx*winy*3;データを変換するために必要な配列変数
	convRGBtoBGR i,dataarray3;意味上はBGR→RGBにしたいが、やってることは同じ
	convRGBtoRGBA dataarray3,dataarray4;これしないとHGLWriteTextureで扱える形式にならないので
	//ここまで

	HGLCreateTexture1 texid,winx,winy,GL_RGBA,GL_UNSIGNED_BYTE;texid作成
	HGLWriteTexture texid,dataarray4,0,0,winx,winy,GL_RGBA,GL_UNSIGNED_BYTE;texidにデータを転送、このときdataarray4のサイズがしっかり合ってないと思わぬエラーになる
	//これでテクスチャにデータが転送された。あとは描画するだけ



	gsel 0
	HGLSetView//ここで深度勝手に適応される
	ang=0.0
	glClearColor 0.0, 0.0, 0.0, 1.0//背景色指定、ｗ成分は1.0

	glEnable GL_TEXTURE_2D;これから描画でテクスチャ使いますよ
	glBindTexture GL_TEXTURE_2D,texid;txidを現在使いたいテクスチャとしてバインド


	repeat -1
	    glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); 
	    // 図形の描画
	    glPushMatrix
		gluLookAt 6.0*cos(ang),0.0,6.0*sin(ang),0.0,0.0,0.0, 0.0,1.0,0.0;視点

		glBegin GL_QUADS//OpenGLでは中心が0,0としたら1.0,1.0は右上
		glTexCoord2d 0.0, 1.0;テクスチャのUV指定
		glVertex3d -2.2, 2.2,0.0
		glTexCoord2d 1.0, 1.0;テクスチャのUV指定
		glVertex3d 2.2, 2.2,0.0
		glTexCoord2d 1.0, 0.0;テクスチャのUV指定
		glVertex3d 2.2,  -2.2,0.0
		glTexCoord2d 0.0, 0.0;テクスチャのUV指定
		glVertex3d -2.2,  -2.2,0.0
		glEnd
		glFinish

	    glPopMatrix
		ang+=0.03
		await 16
		SwapBuffers wglGetCurrentDC()
	loop
